function SudokuSolver.new 5
push constant 7
call Memory.alloc 1
pop pointer 0
push constant 3
pop this 2
push this 2
push this 2
call Math.multiply 2
pop this 1
push this 1
call Array.new 1
pop this 3
push constant 0
pop local 3
label WHILE_EXP0
push local 3
push this 1
lt
not
if-goto WHILE_END0
push this 1
push constant 1
add
call Array.new 1
pop local 0
push constant 0
pop local 4
label WHILE_EXP1
push local 4
push this 1
push constant 1
add
lt
not
if-goto WHILE_END1
push local 4
push local 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 4
push constant 1
add
pop local 4
goto WHILE_EXP1
label WHILE_END1
push local 3
push this 3
add
push local 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 3
push constant 1
add
pop local 3
goto WHILE_EXP0
label WHILE_END0
push this 1
call Array.new 1
pop this 4
push constant 0
pop local 3
label WHILE_EXP2
push local 3
push this 1
lt
not
if-goto WHILE_END2
push this 1
push constant 1
add
call Array.new 1
pop local 1
push constant 0
pop local 4
label WHILE_EXP3
push local 4
push this 1
push constant 1
add
lt
not
if-goto WHILE_END3
push local 4
push local 1
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 4
push constant 1
add
pop local 4
goto WHILE_EXP3
label WHILE_END3
push local 3
push this 4
add
push local 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 3
push constant 1
add
pop local 3
goto WHILE_EXP2
label WHILE_END2
push this 1
call Array.new 1
pop this 5
push constant 0
pop local 3
label WHILE_EXP4
push local 3
push this 1
lt
not
if-goto WHILE_END4
push this 1
push constant 1
add
call Array.new 1
pop local 2
push constant 0
pop local 4
label WHILE_EXP5
push local 4
push this 1
push constant 1
add
lt
not
if-goto WHILE_END5
push local 4
push local 2
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 4
push constant 1
add
pop local 4
goto WHILE_EXP5
label WHILE_END5
push local 3
push this 5
add
push local 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 3
push constant 1
add
pop local 3
goto WHILE_EXP4
label WHILE_END4
push argument 0
pop this 0
push constant 0
pop this 6
push pointer 0
return
function SudokuSolver.couldPlace 8
push argument 0
pop pointer 0
push argument 2
push this 2
call Math.divide 2
push this 2
call Math.multiply 2
push argument 3
push this 2
call Math.divide 2
add
pop local 3
push argument 2
push this 3
add
pop pointer 1
push that 0
pop local 0
push argument 3
push this 4
add
pop pointer 1
push that 0
pop local 1
push local 3
push this 5
add
pop pointer 1
push that 0
pop local 2
push argument 1
push local 0
add
pop pointer 1
push that 0
pop local 5
push argument 1
push local 1
add
pop pointer 1
push that 0
pop local 6
push argument 1
push local 2
add
pop pointer 1
push that 0
pop local 7
push local 5
push local 6
add
push local 7
add
pop local 4
push local 4
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
return
label IF_FALSE0
push constant 0
return
function SudokuSolver.placeNumber 5
push argument 0
pop pointer 0
push argument 2
push this 2
call Math.divide 2
push this 2
call Math.multiply 2
push argument 3
push this 2
call Math.divide 2
add
pop local 4
push argument 2
push this 3
add
pop pointer 1
push that 0
pop local 0
push argument 1
push local 0
add
push argument 1
push local 0
add
pop pointer 1
push that 0
push constant 1
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push argument 3
push this 4
add
pop pointer 1
push that 0
pop local 1
push argument 1
push local 1
add
push argument 1
push local 1
add
pop pointer 1
push that 0
push constant 1
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 4
push this 5
add
pop pointer 1
push that 0
pop local 2
push argument 1
push local 2
add
push argument 1
push local 2
add
pop pointer 1
push that 0
push constant 1
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push argument 2
push this 0
add
pop pointer 1
push that 0
pop local 3
push argument 3
push local 3
add
push argument 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
function SudokuSolver.removeNumber 5
push argument 0
pop pointer 0
push argument 2
push this 2
call Math.divide 2
push this 2
call Math.multiply 2
push argument 3
push this 2
call Math.divide 2
add
pop local 4
push argument 2
push this 3
add
pop pointer 1
push that 0
pop local 0
push argument 1
push local 0
add
push argument 1
push local 0
add
pop pointer 1
push that 0
push constant 1
sub
pop temp 0
pop pointer 1
push temp 0
pop that 0
push argument 3
push this 4
add
pop pointer 1
push that 0
pop local 1
push argument 1
push local 1
add
push argument 1
push local 1
add
pop pointer 1
push that 0
push constant 1
sub
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 4
push this 5
add
pop pointer 1
push that 0
pop local 2
push argument 1
push local 2
add
push argument 1
push local 2
add
pop pointer 1
push that 0
push constant 1
sub
pop temp 0
pop pointer 1
push temp 0
pop that 0
push argument 2
push this 0
add
pop pointer 1
push that 0
pop local 3
push argument 3
push local 3
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
function SudokuSolver.placeNextNumbers 0
push argument 0
pop pointer 0
push argument 2
push this 1
push constant 1
sub
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 1
push this 1
push constant 1
sub
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
not
pop this 6
goto IF_END1
label IF_FALSE1
push pointer 0
push argument 1
push constant 1
add
push constant 0
call SudokuSolver.backtrack 3
pop temp 0
label IF_END1
goto IF_END0
label IF_FALSE0
push argument 2
push this 1
push constant 1
sub
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push pointer 0
push argument 1
push constant 1
add
push constant 0
call SudokuSolver.backtrack 3
pop temp 0
goto IF_END2
label IF_FALSE2
push pointer 0
push argument 1
push argument 2
push constant 1
add
call SudokuSolver.backtrack 3
pop temp 0
label IF_END2
label IF_END0
push constant 0
return
function SudokuSolver.backtrack 3
push argument 0
pop pointer 0
push argument 1
push this 0
add
pop pointer 1
push that 0
pop local 0
push argument 2
push local 0
add
pop pointer 1
push that 0
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 1
pop local 1
label WHILE_EXP0
push local 1
push constant 10
lt
not
if-goto WHILE_END0
push pointer 0
push local 1
push argument 1
push argument 2
call SudokuSolver.couldPlace 4
pop local 2
push local 2
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push pointer 0
push local 1
push argument 1
push argument 2
call SudokuSolver.placeNumber 4
pop temp 0
push pointer 0
push argument 1
push argument 2
call SudokuSolver.placeNextNumbers 3
pop temp 0
push this 6
not
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push pointer 0
push local 1
push argument 1
push argument 2
call SudokuSolver.removeNumber 4
pop temp 0
label IF_FALSE2
label IF_FALSE1
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
goto IF_END0
label IF_FALSE0
push pointer 0
push argument 1
push argument 2
call SudokuSolver.placeNextNumbers 3
pop temp 0
label IF_END0
push constant 0
return
function SudokuSolver.solveSudoku 4
push argument 0
pop pointer 0
push constant 0
pop local 1
label WHILE_EXP0
push local 1
push this 1
lt
not
if-goto WHILE_END0
push local 1
push this 0
add
pop pointer 1
push that 0
pop local 0
push constant 0
pop local 2
label WHILE_EXP1
push local 2
push this 1
push constant 1
add
lt
not
if-goto WHILE_END1
push local 2
push local 0
add
pop pointer 1
push that 0
push constant 0
eq
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 2
push local 0
add
pop pointer 1
push that 0
pop local 3
push pointer 0
push local 3
push local 1
push local 2
call SudokuSolver.placeNumber 4
pop temp 0
label IF_FALSE0
push local 2
push constant 1
add
pop local 2
goto WHILE_EXP1
label WHILE_END1
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push pointer 0
push constant 0
push constant 0
call SudokuSolver.backtrack 3
pop temp 0
push constant 0
return
function SudokuSolver.printBoard 5
push argument 0
pop pointer 0
push constant 0
pop local 1
call Output.println 0
pop temp 0
label WHILE_EXP0
push local 1
push this 1
lt
not
if-goto WHILE_END0
push local 1
push this 0
add
pop pointer 1
push that 0
pop local 0
push constant 0
pop local 2
label WHILE_EXP1
push local 2
push this 1
lt
not
if-goto WHILE_END1
push local 2
push local 0
add
pop pointer 1
push that 0
pop local 3
push local 3
call Output.printInt 1
pop temp 0
push constant 32
pop local 4
push local 4
call Output.printChar 1
pop temp 0
push local 2
push constant 1
add
pop local 2
goto WHILE_EXP1
label WHILE_END1
call Output.println 0
pop temp 0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function SudokuSolver.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
